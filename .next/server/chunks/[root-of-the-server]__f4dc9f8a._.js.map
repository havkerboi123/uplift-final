{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":["file:///D:/uplift-demo/demo/app/api/connection-details/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport { AccessToken, type AccessTokenOptions, type VideoGrant } from 'livekit-server-sdk';\r\nimport { RoomConfiguration } from '@livekit/protocol';\r\n\r\n// NOTE: you are expected to define the following environment variables in `.env.local`:\r\nconst API_KEY = process.env.LIVEKIT_API_KEY;\r\nconst API_SECRET = process.env.LIVEKIT_API_SECRET;\r\nconst LIVEKIT_URL = process.env.LIVEKIT_URL;\r\n\r\n// don't cache the results\r\nexport const revalidate = 0;\r\n\r\nexport type ConnectionDetails = {\r\n  serverUrl: string;\r\n  roomName: string;\r\n  participantName: string;\r\n  participantToken: string;\r\n};\r\n\r\nexport async function POST(req: Request) {\r\n  try {\r\n    if (LIVEKIT_URL === undefined) {\r\n      throw new Error('LIVEKIT_URL is not defined');\r\n    }\r\n    if (API_KEY === undefined) {\r\n      throw new Error('LIVEKIT_API_KEY is not defined');\r\n    }\r\n    if (API_SECRET === undefined) {\r\n      throw new Error('LIVEKIT_API_SECRET is not defined');\r\n    }\r\n\r\n    // Parse agent configuration from request body\r\n    const body = await req.json();\r\n    const agentName: string = body?.room_config?.agents?.[0]?.agent_name;\r\n\r\n    // Generate participant token\r\n    const participantName = 'user';\r\n    const participantIdentity = `voice_assistant_user_${Math.floor(Math.random() * 10_000)}`;\r\n    const roomName = `voice_assistant_room_${Math.floor(Math.random() * 10_000)}`;\r\n\r\n    const participantToken = await createParticipantToken(\r\n      { identity: participantIdentity, name: participantName },\r\n      roomName,\r\n      agentName\r\n    );\r\n\r\n    // Return connection details\r\n    const data: ConnectionDetails = {\r\n      serverUrl: LIVEKIT_URL,\r\n      roomName,\r\n      participantToken: participantToken,\r\n      participantName,\r\n    };\r\n    const headers = new Headers({\r\n      'Cache-Control': 'no-store',\r\n    });\r\n    return NextResponse.json(data, { headers });\r\n  } catch (error) {\r\n    if (error instanceof Error) {\r\n      console.error(error);\r\n      return new NextResponse(error.message, { status: 500 });\r\n    }\r\n  }\r\n}\r\n\r\nfunction createParticipantToken(\r\n  userInfo: AccessTokenOptions,\r\n  roomName: string,\r\n  agentName?: string\r\n): Promise<string> {\r\n  const at = new AccessToken(API_KEY, API_SECRET, {\r\n    ...userInfo,\r\n    ttl: '15m',\r\n  });\r\n  const grant: VideoGrant = {\r\n    room: roomName,\r\n    roomJoin: true,\r\n    canPublish: true,\r\n    canPublishData: true,\r\n    canSubscribe: true,\r\n  };\r\n  at.addGrant(grant);\r\n\r\n  if (agentName) {\r\n    at.roomConfig = new RoomConfiguration({\r\n      agents: [{ agentName }],\r\n    });\r\n  }\r\n\r\n  return at.toJwt();\r\n}\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAAA;AACA;;;;AAEA,wFAAwF;AACxF,MAAM,UAAU,QAAQ,GAAG,CAAC,eAAe;AAC3C,MAAM,aAAa,QAAQ,GAAG,CAAC,kBAAkB;AACjD,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAGpC,MAAM,aAAa;AASnB,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,IAAI,gBAAgB,WAAW;YAC7B,MAAM,IAAI,MAAM;QAClB;QACA,IAAI,YAAY,WAAW;YACzB,MAAM,IAAI,MAAM;QAClB;QACA,IAAI,eAAe,WAAW;YAC5B,MAAM,IAAI,MAAM;QAClB;QAEA,8CAA8C;QAC9C,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,YAAoB,MAAM,aAAa,QAAQ,CAAC,EAAE,EAAE;QAE1D,6BAA6B;QAC7B,MAAM,kBAAkB;QACxB,MAAM,sBAAsB,CAAC,qBAAqB,EAAE,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,SAAS;QACxF,MAAM,WAAW,CAAC,qBAAqB,EAAE,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,SAAS;QAE7E,MAAM,mBAAmB,MAAM,uBAC7B;YAAE,UAAU;YAAqB,MAAM;QAAgB,GACvD,UACA;QAGF,4BAA4B;QAC5B,MAAM,OAA0B;YAC9B,WAAW;YACX;YACA,kBAAkB;YAClB;QACF;QACA,MAAM,UAAU,IAAI,QAAQ;YAC1B,iBAAiB;QACnB;QACA,OAAO,gJAAY,CAAC,IAAI,CAAC,MAAM;YAAE;QAAQ;IAC3C,EAAE,OAAO,OAAO;QACd,IAAI,iBAAiB,OAAO;YAC1B,QAAQ,KAAK,CAAC;YACd,OAAO,IAAI,gJAAY,CAAC,MAAM,OAAO,EAAE;gBAAE,QAAQ;YAAI;QACvD;IACF;AACF;AAEA,SAAS,uBACP,QAA4B,EAC5B,QAAgB,EAChB,SAAkB;IAElB,MAAM,KAAK,IAAI,gLAAW,CAAC,SAAS,YAAY;QAC9C,GAAG,QAAQ;QACX,KAAK;IACP;IACA,MAAM,QAAoB;QACxB,MAAM;QACN,UAAU;QACV,YAAY;QACZ,gBAAgB;QAChB,cAAc;IAChB;IACA,GAAG,QAAQ,CAAC;IAEZ,IAAI,WAAW;QACb,GAAG,UAAU,GAAG,IAAI,8LAAiB,CAAC;YACpC,QAAQ;gBAAC;oBAAE;gBAAU;aAAE;QACzB;IACF;IAEA,OAAO,GAAG,KAAK;AACjB","debugId":null}}]
}