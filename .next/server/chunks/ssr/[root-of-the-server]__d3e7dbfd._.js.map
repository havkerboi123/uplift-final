{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/public_sans_1bc6418c.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"public_sans_1bc6418c-module__6uzjwa__className\",\n  \"variable\": \"public_sans_1bc6418c-module__6uzjwa__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 11, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/public_sans_1bc6418c.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Public_Sans%22,%22arguments%22:[{%22variable%22:%22--font-public-sans%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22publicSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Public Sans', 'Public Sans Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,sKAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,sKAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,sKAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/app/commitmono_fb7faa13.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"commitmono_fb7faa13-module__mMvywG__className\",\n  \"variable\": \"commitmono_fb7faa13-module__mMvywG__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA"}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///D:/uplift-demo/demo/app/commitmono_fb7faa13.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/local/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22%22,%22arguments%22:[{%22src%22:[{%22path%22:%22./fonts/CommitMono-400-Regular.otf%22,%22weight%22:%22400%22,%22style%22:%22normal%22},{%22path%22:%22./fonts/CommitMono-700-Regular.otf%22,%22weight%22:%22700%22,%22style%22:%22normal%22},{%22path%22:%22./fonts/CommitMono-400-Italic.otf%22,%22weight%22:%22400%22,%22style%22:%22italic%22},{%22path%22:%22./fonts/CommitMono-700-Italic.otf%22,%22weight%22:%22700%22,%22style%22:%22italic%22}],%22variable%22:%22--font-commit-mono%22}],%22variableName%22:%22commitMono%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'commitMono', 'commitMono Fallback'\",\n        \n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,iJAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;IAEhB;AACJ;AAEA,IAAI,iJAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,iJAAS,CAAC,QAAQ;AAC1C;uCAEe","debugId":null}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file:///D:/uplift-demo/demo/app-config.ts"],"sourcesContent":["import type { AppConfig } from './lib/types';\r\n\r\nexport const APP_CONFIG_DEFAULTS: AppConfig = {\r\n  companyName: 'LiveKit',\r\n  pageTitle: 'LiveKit Voice Agent',\r\n  pageDescription: 'A voice agent built with LiveKit',\r\n\r\n  supportsChatInput: true,\r\n  supportsVideoInput: true,\r\n  supportsScreenShare: true,\r\n  isPreConnectBufferEnabled: true,\r\n\r\n  logo: '/lk-logo.svg',\r\n  accent: '#002cf2',\r\n  logoDark: '/lk-logo-dark.svg',\r\n  accentDark: '#1fd5f9',\r\n  startButtonText: 'Start call',\r\n\r\n  agentName: undefined,\r\n};\r\n"],"names":[],"mappings":";;;;AAEO,MAAM,sBAAiC;IAC5C,aAAa;IACb,WAAW;IACX,iBAAiB;IAEjB,mBAAmB;IACnB,oBAAoB;IACpB,qBAAqB;IACrB,2BAA2B;IAE3B,MAAM;IACN,QAAQ;IACR,UAAU;IACV,YAAY;IACZ,iBAAiB;IAEjB,WAAW;AACb","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///D:/uplift-demo/demo/components/theme-toggle.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const ApplyThemeScript = registerClientReference(\n    function() { throw new Error(\"Attempted to call ApplyThemeScript() from the server but ApplyThemeScript is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/theme-toggle.tsx <module evaluation>\",\n    \"ApplyThemeScript\",\n);\nexport const ThemeToggle = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeToggle() from the server but ThemeToggle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/theme-toggle.tsx <module evaluation>\",\n    \"ThemeToggle\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;AACvE;;AACO,MAAM,mBAAmB,IAAA,wQAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,6DACA;AAEG,MAAM,cAAc,IAAA,wQAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,6DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file:///D:/uplift-demo/demo/components/theme-toggle.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const ApplyThemeScript = registerClientReference(\n    function() { throw new Error(\"Attempted to call ApplyThemeScript() from the server but ApplyThemeScript is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/theme-toggle.tsx\",\n    \"ApplyThemeScript\",\n);\nexport const ThemeToggle = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeToggle() from the server but ThemeToggle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/theme-toggle.tsx\",\n    \"ThemeToggle\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;AACvE;;AACO,MAAM,mBAAmB,IAAA,wQAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,yCACA;AAEG,MAAM,cAAc,IAAA,wQAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,yCACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file:///D:/uplift-demo/demo/lib/utils.ts"],"sourcesContent":["import { cache } from 'react';\r\nimport { type ClassValue, clsx } from 'clsx';\r\nimport { Room } from 'livekit-client';\r\nimport { twMerge } from 'tailwind-merge';\r\nimport type { ReceivedChatMessage, TextStreamData } from '@livekit/components-react';\r\nimport { APP_CONFIG_DEFAULTS } from '@/app-config';\r\nimport type { AppConfig, SandboxConfig } from './types';\r\n\r\nexport const CONFIG_ENDPOINT = process.env.NEXT_PUBLIC_APP_CONFIG_ENDPOINT;\r\nexport const SANDBOX_ID = process.env.SANDBOX_ID;\r\n\r\nexport const THEME_STORAGE_KEY = 'theme-mode';\r\nexport const THEME_MEDIA_QUERY = '(prefers-color-scheme: dark)';\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n\r\nexport function transcriptionToChatMessage(\r\n  textStream: TextStreamData,\r\n  room: Room\r\n): ReceivedChatMessage {\r\n  return {\r\n    id: textStream.streamInfo.id,\r\n    timestamp: textStream.streamInfo.timestamp,\r\n    message: textStream.text,\r\n    from:\r\n      textStream.participantInfo.identity === room.localParticipant.identity\r\n        ? room.localParticipant\r\n        : Array.from(room.remoteParticipants.values()).find(\r\n            (p) => p.identity === textStream.participantInfo.identity\r\n          ),\r\n  };\r\n}\r\n\r\n// https://react.dev/reference/react/cache#caveats\r\n// > React will invalidate the cache for all memoized functions for each server request.\r\nexport const getAppConfig = cache(async (headers: Headers): Promise<AppConfig> => {\r\n  if (CONFIG_ENDPOINT) {\r\n    const sandboxId = SANDBOX_ID ?? headers.get('x-sandbox-id') ?? '';\r\n\r\n    try {\r\n      if (!sandboxId) {\r\n        throw new Error('Sandbox ID is required');\r\n      }\r\n\r\n      const response = await fetch(CONFIG_ENDPOINT, {\r\n        cache: 'no-store',\r\n        headers: { 'X-Sandbox-ID': sandboxId },\r\n      });\r\n\r\n      const remoteConfig: SandboxConfig = await response.json();\r\n      const config: AppConfig = { sandboxId, ...APP_CONFIG_DEFAULTS };\r\n\r\n      for (const [key, entry] of Object.entries(remoteConfig)) {\r\n        if (entry === null) continue;\r\n        // Only include app config entries that are declared in defaults and, if set,\r\n        // share the same primitive type as the default value.\r\n        if (\r\n          (key in APP_CONFIG_DEFAULTS &&\r\n            APP_CONFIG_DEFAULTS[key as keyof AppConfig] === undefined) ||\r\n          (typeof config[key as keyof AppConfig] === entry.type &&\r\n            typeof config[key as keyof AppConfig] === typeof entry.value)\r\n        ) {\r\n          // @ts-expect-error I'm not sure quite how to appease TypeScript, but we've thoroughly checked types above\r\n          config[key as keyof AppConfig] = entry.value as AppConfig[keyof AppConfig];\r\n        }\r\n      }\r\n\r\n      return config;\r\n    } catch (error) {\r\n      console.error('ERROR: getAppConfig() - lib/utils.ts', error);\r\n    }\r\n  }\r\n\r\n  return APP_CONFIG_DEFAULTS;\r\n});\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;;;;;AAGO,MAAM,kBAAkB,QAAQ,GAAG,CAAC,+BAA+B;AACnE,MAAM,aAAa,QAAQ,GAAG,CAAC,UAAU;AAEzC,MAAM,oBAAoB;AAC1B,MAAM,oBAAoB;AAE1B,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,sKAAO,EAAC,IAAA,6IAAI,EAAC;AACtB;AAEO,SAAS,2BACd,UAA0B,EAC1B,IAAU;IAEV,OAAO;QACL,IAAI,WAAW,UAAU,CAAC,EAAE;QAC5B,WAAW,WAAW,UAAU,CAAC,SAAS;QAC1C,SAAS,WAAW,IAAI;QACxB,MACE,WAAW,eAAe,CAAC,QAAQ,KAAK,KAAK,gBAAgB,CAAC,QAAQ,GAClE,KAAK,gBAAgB,GACrB,MAAM,IAAI,CAAC,KAAK,kBAAkB,CAAC,MAAM,IAAI,IAAI,CAC/C,CAAC,IAAM,EAAE,QAAQ,KAAK,WAAW,eAAe,CAAC,QAAQ;IAEnE;AACF;AAIO,MAAM,eAAe,IAAA,8MAAK,EAAC,OAAO;IACvC,IAAI,iBAAiB;QACnB,MAAM,YAAY,cAAc,QAAQ,GAAG,CAAC,mBAAmB;QAE/D,IAAI;YACF,IAAI,CAAC,WAAW;gBACd,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,WAAW,MAAM,MAAM,iBAAiB;gBAC5C,OAAO;gBACP,SAAS;oBAAE,gBAAgB;gBAAU;YACvC;YAEA,MAAM,eAA8B,MAAM,SAAS,IAAI;YACvD,MAAM,SAAoB;gBAAE;gBAAW,GAAG,oIAAmB;YAAC;YAE9D,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,OAAO,OAAO,CAAC,cAAe;gBACvD,IAAI,UAAU,MAAM;gBACpB,6EAA6E;gBAC7E,sDAAsD;gBACtD,IACE,AAAC,OAAO,oIAAmB,IACzB,oIAAmB,CAAC,IAAuB,KAAK,aACjD,OAAO,MAAM,CAAC,IAAuB,KAAK,MAAM,IAAI,IACnD,OAAO,MAAM,CAAC,IAAuB,KAAK,OAAO,MAAM,KAAK,EAC9D;oBACA,0GAA0G;oBAC1G,MAAM,CAAC,IAAuB,GAAG,MAAM,KAAK;gBAC9C;YACF;YAEA,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,wCAAwC;QACxD;IACF;IAEA,OAAO,oIAAmB;AAC5B","debugId":null}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":["file:///D:/uplift-demo/demo/app/layout.tsx"],"sourcesContent":["import { Public_Sans } from 'next/font/google';\r\nimport localFont from 'next/font/local';\r\nimport { headers } from 'next/headers';\r\nimport { APP_CONFIG_DEFAULTS } from '@/app-config';\r\nimport { ApplyThemeScript, ThemeToggle } from '@/components/theme-toggle';\r\nimport { getAppConfig } from '@/lib/utils';\r\nimport './globals.css';\r\n\r\nconst publicSans = Public_Sans({\r\n  variable: '--font-public-sans',\r\n  subsets: ['latin'],\r\n});\r\n\r\nconst commitMono = localFont({\r\n  src: [\r\n    {\r\n      path: './fonts/CommitMono-400-Regular.otf',\r\n      weight: '400',\r\n      style: 'normal',\r\n    },\r\n    {\r\n      path: './fonts/CommitMono-700-Regular.otf',\r\n      weight: '700',\r\n      style: 'normal',\r\n    },\r\n    {\r\n      path: './fonts/CommitMono-400-Italic.otf',\r\n      weight: '400',\r\n      style: 'italic',\r\n    },\r\n    {\r\n      path: './fonts/CommitMono-700-Italic.otf',\r\n      weight: '700',\r\n      style: 'italic',\r\n    },\r\n  ],\r\n  variable: '--font-commit-mono',\r\n});\r\n\r\ninterface RootLayoutProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport default async function RootLayout({ children }: RootLayoutProps) {\r\n  const hdrs = await headers();\r\n  const { accent, accentDark, pageTitle, pageDescription } = await getAppConfig(hdrs);\r\n\r\n  // check provided accent colors against defaults, and apply styles if they differ (or in development mode)\r\n  // generate a hover color for the accent color by mixing it with 20% black\r\n  const styles = [\r\n    process.env.NODE_ENV === 'development' || accent !== APP_CONFIG_DEFAULTS.accent\r\n      ? `:root { --primary: ${accent}; --primary-hover: color-mix(in srgb, ${accent} 80%, #000); }`\r\n      : '',\r\n    process.env.NODE_ENV === 'development' || accentDark !== APP_CONFIG_DEFAULTS.accentDark\r\n      ? `.dark { --primary: ${accentDark}; --primary-hover: color-mix(in srgb, ${accentDark} 80%, #000); }`\r\n      : '',\r\n  ]\r\n    .filter(Boolean)\r\n    .join('\\n');\r\n\r\n  return (\r\n    <html lang=\"en\" suppressHydrationWarning className=\"scroll-smooth\">\r\n      <head>\r\n        {styles && <style>{styles}</style>}\r\n        <title>{pageTitle}</title>\r\n        <meta name=\"description\" content={pageDescription} />\r\n        <ApplyThemeScript />\r\n      </head>\r\n      <body\r\n        className={`${publicSans.variable} ${commitMono.variable} overflow-x-hidden antialiased`}\r\n      >\r\n        {children}\r\n        <div className=\"group fixed bottom-0 left-1/2 z-50 mb-2 -translate-x-1/2\">\r\n          <ThemeToggle className=\"translate-y-20 transition-transform delay-150 duration-300 group-hover:translate-y-0\" />\r\n        </div>\r\n      </body>\r\n    </html>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AACA;AACA;;;;;;;;;AAsCe,eAAe,WAAW,EAAE,QAAQ,EAAmB;IACpE,MAAM,OAAO,MAAM,IAAA,0IAAO;IAC1B,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,eAAe,EAAE,GAAG,MAAM,IAAA,4HAAY,EAAC;IAE9E,0GAA0G;IAC1G,0EAA0E;IAC1E,MAAM,SAAS;QACb,uCACI,CAAC,mBAAmB,EAAE,OAAO,sCAAsC,EAAE,OAAO,cAAc,CAAC,GAC3F;QACJ,uCACI,CAAC,mBAAmB,EAAE,WAAW,sCAAsC,EAAE,WAAW,cAAc,CAAC,GACnG;KACL,CACE,MAAM,CAAC,SACP,IAAI,CAAC;IAER,qBACE,8OAAC;QAAK,MAAK;QAAK,wBAAwB;QAAC,WAAU;;0BACjD,8OAAC;;oBACE,wBAAU,8OAAC;kCAAO;;;;;;kCACnB,8OAAC;kCAAO;;;;;;kCACR,8OAAC;wBAAK,MAAK;wBAAc,SAAS;;;;;;kCAClC,8OAAC,kJAAgB;;;;;;;;;;;0BAEnB,8OAAC;gBACC,WAAW,GAAG,0JAAU,CAAC,QAAQ,CAAC,CAAC,EAAE,qIAAU,CAAC,QAAQ,CAAC,8BAA8B,CAAC;;oBAEvF;kCACD,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,6IAAW;4BAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;AAKjC","debugId":null}}]
}