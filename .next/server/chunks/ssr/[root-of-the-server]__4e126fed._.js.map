{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///D:/uplift-demo/demo/app-config.ts"],"sourcesContent":["import type { AppConfig } from './lib/types';\r\n\r\nexport const APP_CONFIG_DEFAULTS: AppConfig = {\r\n  companyName: 'LiveKit',\r\n  pageTitle: 'LiveKit Voice Agent',\r\n  pageDescription: 'A voice agent built with LiveKit',\r\n\r\n  supportsChatInput: true,\r\n  supportsVideoInput: true,\r\n  supportsScreenShare: true,\r\n  isPreConnectBufferEnabled: true,\r\n\r\n  logo: '/lk-logo.svg',\r\n  accent: '#002cf2',\r\n  logoDark: '/lk-logo-dark.svg',\r\n  accentDark: '#1fd5f9',\r\n  startButtonText: 'Start call',\r\n\r\n  agentName: undefined,\r\n};\r\n"],"names":[],"mappings":";;;;AAEO,MAAM,sBAAiC;IAC5C,aAAa;IACb,WAAW;IACX,iBAAiB;IAEjB,mBAAmB;IACnB,oBAAoB;IACpB,qBAAqB;IACrB,2BAA2B;IAE3B,MAAM;IACN,QAAQ;IACR,UAAU;IACV,YAAY;IACZ,iBAAiB;IAEjB,WAAW;AACb","debugId":null}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file:///D:/uplift-demo/demo/lib/utils.ts"],"sourcesContent":["import { cache } from 'react';\r\nimport { type ClassValue, clsx } from 'clsx';\r\nimport { Room } from 'livekit-client';\r\nimport { twMerge } from 'tailwind-merge';\r\nimport type { ReceivedChatMessage, TextStreamData } from '@livekit/components-react';\r\nimport { APP_CONFIG_DEFAULTS } from '@/app-config';\r\nimport type { AppConfig, SandboxConfig } from './types';\r\n\r\nexport const CONFIG_ENDPOINT = process.env.NEXT_PUBLIC_APP_CONFIG_ENDPOINT;\r\nexport const SANDBOX_ID = process.env.SANDBOX_ID;\r\n\r\nexport const THEME_STORAGE_KEY = 'theme-mode';\r\nexport const THEME_MEDIA_QUERY = '(prefers-color-scheme: dark)';\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n\r\nexport function transcriptionToChatMessage(\r\n  textStream: TextStreamData,\r\n  room: Room\r\n): ReceivedChatMessage {\r\n  return {\r\n    id: textStream.streamInfo.id,\r\n    timestamp: textStream.streamInfo.timestamp,\r\n    message: textStream.text,\r\n    from:\r\n      textStream.participantInfo.identity === room.localParticipant.identity\r\n        ? room.localParticipant\r\n        : Array.from(room.remoteParticipants.values()).find(\r\n            (p) => p.identity === textStream.participantInfo.identity\r\n          ),\r\n  };\r\n}\r\n\r\n// https://react.dev/reference/react/cache#caveats\r\n// > React will invalidate the cache for all memoized functions for each server request.\r\nexport const getAppConfig = cache(async (headers: Headers): Promise<AppConfig> => {\r\n  if (CONFIG_ENDPOINT) {\r\n    const sandboxId = SANDBOX_ID ?? headers.get('x-sandbox-id') ?? '';\r\n\r\n    try {\r\n      if (!sandboxId) {\r\n        throw new Error('Sandbox ID is required');\r\n      }\r\n\r\n      const response = await fetch(CONFIG_ENDPOINT, {\r\n        cache: 'no-store',\r\n        headers: { 'X-Sandbox-ID': sandboxId },\r\n      });\r\n\r\n      const remoteConfig: SandboxConfig = await response.json();\r\n      const config: AppConfig = { sandboxId, ...APP_CONFIG_DEFAULTS };\r\n\r\n      for (const [key, entry] of Object.entries(remoteConfig)) {\r\n        if (entry === null) continue;\r\n        // Only include app config entries that are declared in defaults and, if set,\r\n        // share the same primitive type as the default value.\r\n        if (\r\n          (key in APP_CONFIG_DEFAULTS &&\r\n            APP_CONFIG_DEFAULTS[key as keyof AppConfig] === undefined) ||\r\n          (typeof config[key as keyof AppConfig] === entry.type &&\r\n            typeof config[key as keyof AppConfig] === typeof entry.value)\r\n        ) {\r\n          // @ts-expect-error I'm not sure quite how to appease TypeScript, but we've thoroughly checked types above\r\n          config[key as keyof AppConfig] = entry.value as AppConfig[keyof AppConfig];\r\n        }\r\n      }\r\n\r\n      return config;\r\n    } catch (error) {\r\n      console.error('ERROR: getAppConfig() - lib/utils.ts', error);\r\n    }\r\n  }\r\n\r\n  return APP_CONFIG_DEFAULTS;\r\n});\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;;;;;AAGO,MAAM,kBAAkB,QAAQ,GAAG,CAAC,+BAA+B;AACnE,MAAM,aAAa,QAAQ,GAAG,CAAC,UAAU;AAEzC,MAAM,oBAAoB;AAC1B,MAAM,oBAAoB;AAE1B,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,sKAAO,EAAC,IAAA,6IAAI,EAAC;AACtB;AAEO,SAAS,2BACd,UAA0B,EAC1B,IAAU;IAEV,OAAO;QACL,IAAI,WAAW,UAAU,CAAC,EAAE;QAC5B,WAAW,WAAW,UAAU,CAAC,SAAS;QAC1C,SAAS,WAAW,IAAI;QACxB,MACE,WAAW,eAAe,CAAC,QAAQ,KAAK,KAAK,gBAAgB,CAAC,QAAQ,GAClE,KAAK,gBAAgB,GACrB,MAAM,IAAI,CAAC,KAAK,kBAAkB,CAAC,MAAM,IAAI,IAAI,CAC/C,CAAC,IAAM,EAAE,QAAQ,KAAK,WAAW,eAAe,CAAC,QAAQ;IAEnE;AACF;AAIO,MAAM,eAAe,IAAA,8MAAK,EAAC,OAAO;IACvC,IAAI,iBAAiB;QACnB,MAAM,YAAY,cAAc,QAAQ,GAAG,CAAC,mBAAmB;QAE/D,IAAI;YACF,IAAI,CAAC,WAAW;gBACd,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,WAAW,MAAM,MAAM,iBAAiB;gBAC5C,OAAO;gBACP,SAAS;oBAAE,gBAAgB;gBAAU;YACvC;YAEA,MAAM,eAA8B,MAAM,SAAS,IAAI;YACvD,MAAM,SAAoB;gBAAE;gBAAW,GAAG,oIAAmB;YAAC;YAE9D,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,OAAO,OAAO,CAAC,cAAe;gBACvD,IAAI,UAAU,MAAM;gBACpB,6EAA6E;gBAC7E,sDAAsD;gBACtD,IACE,AAAC,OAAO,oIAAmB,IACzB,oIAAmB,CAAC,IAAuB,KAAK,aACjD,OAAO,MAAM,CAAC,IAAuB,KAAK,MAAM,IAAI,IACnD,OAAO,MAAM,CAAC,IAAuB,KAAK,OAAO,MAAM,KAAK,EAC9D;oBACA,0GAA0G;oBAC1G,MAAM,CAAC,IAAuB,GAAG,MAAM,KAAK;gBAC9C;YACF;YAEA,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,wCAAwC;QACxD;IACF;IAEA,OAAO,oIAAmB;AAC5B","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///D:/uplift-demo/demo/components/theme-toggle.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { MonitorIcon, MoonIcon, SunIcon } from '@phosphor-icons/react';\r\nimport type { ThemeMode } from '@/lib/types';\r\nimport { THEME_MEDIA_QUERY, THEME_STORAGE_KEY, cn } from '@/lib/utils';\r\n\r\nconst THEME_SCRIPT = `\r\n  const doc = document.documentElement;\r\n  const theme = localStorage.getItem(\"${THEME_STORAGE_KEY}\") ?? \"system\";\r\n\r\n  if (theme === \"system\") {\r\n    if (window.matchMedia(\"${THEME_MEDIA_QUERY}\").matches) {\r\n      doc.classList.add(\"dark\");\r\n    } else {\r\n      doc.classList.add(\"light\");\r\n    }\r\n  } else {\r\n    doc.classList.add(theme);\r\n  }\r\n`\r\n  .trim()\r\n  .replace(/\\n/g, '')\r\n  .replace(/\\s+/g, ' ');\r\n\r\nfunction applyTheme(theme: ThemeMode) {\r\n  const doc = document.documentElement;\r\n\r\n  doc.classList.remove('dark', 'light');\r\n  localStorage.setItem(THEME_STORAGE_KEY, theme);\r\n\r\n  if (theme === 'system') {\r\n    if (window.matchMedia(THEME_MEDIA_QUERY).matches) {\r\n      doc.classList.add('dark');\r\n    } else {\r\n      doc.classList.add('light');\r\n    }\r\n  } else {\r\n    doc.classList.add(theme);\r\n  }\r\n}\r\n\r\ninterface ThemeToggleProps {\r\n  className?: string;\r\n}\r\n\r\nexport function ApplyThemeScript() {\r\n  return <script id=\"theme-script\">{THEME_SCRIPT}</script>;\r\n}\r\n\r\nexport function ThemeToggle({ className }: ThemeToggleProps) {\r\n  const [theme, setTheme] = useState<ThemeMode | undefined>(undefined);\r\n\r\n  useEffect(() => {\r\n    const storedTheme = (localStorage.getItem(THEME_STORAGE_KEY) as ThemeMode) ?? 'system';\r\n\r\n    setTheme(storedTheme);\r\n  }, []);\r\n\r\n  function handleThemeChange(theme: ThemeMode) {\r\n    applyTheme(theme);\r\n    setTheme(theme);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={cn(\r\n        'text-foreground bg-background flex w-full flex-row justify-end divide-x overflow-hidden rounded-full border',\r\n        className\r\n      )}\r\n    >\r\n      <span className=\"sr-only\">Color scheme toggle</span>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => handleThemeChange('dark')}\r\n        className=\"cursor-pointer p-1 pl-1.5\"\r\n      >\r\n        <span className=\"sr-only\">Enable dark color scheme</span>\r\n        <MoonIcon size={16} weight=\"bold\" className={cn(theme !== 'dark' && 'opacity-25')} />\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => handleThemeChange('light')}\r\n        className=\"cursor-pointer px-1.5 py-1\"\r\n      >\r\n        <span className=\"sr-only\">Enable light color scheme</span>\r\n        <SunIcon size={16} weight=\"bold\" className={cn(theme !== 'light' && 'opacity-25')} />\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => handleThemeChange('system')}\r\n        className=\"cursor-pointer p-1 pr-1.5\"\r\n      >\r\n        <span className=\"sr-only\">Enable system color scheme</span>\r\n        <MonitorIcon size={16} weight=\"bold\" className={cn(theme !== 'system' && 'opacity-25')} />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAAA;AAAA;AAEA;AALA;;;;;AAOA,MAAM,eAAe,CAAC;;sCAEgB,EAAE,iIAAiB,CAAC;;;2BAG/B,EAAE,iIAAiB,CAAC;;;;;;;;AAQ/C,CAAC,CACE,IAAI,GACJ,OAAO,CAAC,OAAO,IACf,OAAO,CAAC,QAAQ;AAEnB,SAAS,WAAW,KAAgB;IAClC,MAAM,MAAM,SAAS,eAAe;IAEpC,IAAI,SAAS,CAAC,MAAM,CAAC,QAAQ;IAC7B,aAAa,OAAO,CAAC,iIAAiB,EAAE;IAExC,IAAI,UAAU,UAAU;QACtB,IAAI,OAAO,UAAU,CAAC,iIAAiB,EAAE,OAAO,EAAE;YAChD,IAAI,SAAS,CAAC,GAAG,CAAC;QACpB,OAAO;YACL,IAAI,SAAS,CAAC,GAAG,CAAC;QACpB;IACF,OAAO;QACL,IAAI,SAAS,CAAC,GAAG,CAAC;IACpB;AACF;AAMO,SAAS;IACd,qBAAO,8OAAC;QAAO,IAAG;kBAAgB;;;;;;AACpC;AAEO,SAAS,YAAY,EAAE,SAAS,EAAoB;IACzD,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,iNAAQ,EAAwB;IAE1D,IAAA,kNAAS,EAAC;QACR,MAAM,cAAc,AAAC,aAAa,OAAO,CAAC,iIAAiB,KAAmB;QAE9E,SAAS;IACX,GAAG,EAAE;IAEL,SAAS,kBAAkB,KAAgB;QACzC,WAAW;QACX,SAAS;IACX;IAEA,qBACE,8OAAC;QACC,WAAW,IAAA,kHAAE,EACX,+GACA;;0BAGF,8OAAC;gBAAK,WAAU;0BAAU;;;;;;0BAC1B,8OAAC;gBACC,MAAK;gBACL,SAAS,IAAM,kBAAkB;gBACjC,WAAU;;kCAEV,8OAAC;wBAAK,WAAU;kCAAU;;;;;;kCAC1B,8OAAC,qLAAQ;wBAAC,MAAM;wBAAI,QAAO;wBAAO,WAAW,IAAA,kHAAE,EAAC,UAAU,UAAU;;;;;;;;;;;;0BAEtE,8OAAC;gBACC,MAAK;gBACL,SAAS,IAAM,kBAAkB;gBACjC,WAAU;;kCAEV,8OAAC;wBAAK,WAAU;kCAAU;;;;;;kCAC1B,8OAAC,mLAAO;wBAAC,MAAM;wBAAI,QAAO;wBAAO,WAAW,IAAA,kHAAE,EAAC,UAAU,WAAW;;;;;;;;;;;;0BAEtE,8OAAC;gBACC,MAAK;gBACL,SAAS,IAAM,kBAAkB;gBACjC,WAAU;;kCAEV,8OAAC;wBAAK,WAAU;kCAAU;;;;;;kCAC1B,8OAAC,2LAAW;wBAAC,MAAM;wBAAI,QAAO;wBAAO,WAAW,IAAA,kHAAE,EAAC,UAAU,YAAY;;;;;;;;;;;;;;;;;;AAIjF","debugId":null}}]
}